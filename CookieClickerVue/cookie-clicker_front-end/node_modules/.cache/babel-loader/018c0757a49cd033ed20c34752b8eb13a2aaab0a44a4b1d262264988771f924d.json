{"ast":null,"code":"import $ from 'jquery';\nimport { randomFloat, randomInteger } from '../site.js';\nimport { cookies, cps, increaseCookieCount } from './cookieHandler.js';\nconst maxGCookieLife = 13000;\nlet Tmin = 300; /*in seconds how long it takes for a cookie to appear*/\nlet Tmax = 900;\nlet nextSpawnInterval;\nexport function convertGCookieTimeToMS() {\n  Tmin *= 1000;\n  Tmax *= 1000;\n}\n\n/**/\n\nexport function setNextSpawnTime() {\n  let nextSpawnTime = randomFloat(Tmin, Tmax);\n  /* nextSpawnTime is the actual delay*/\n  nextSpawnInterval = window.setTimeout(spawnCookie, nextSpawnTime);\n  console.log(`Golden cookie will spawn in ${nextSpawnTime / 1000} seconds`);\n}\nfunction spawnCookie() {\n  let cookie = document.createElement(\"img\");\n  cookie.src = \"/images/goldCookie.png\";\n  cookie.className = \"golden-cookie\";\n  cookie.style.top = randomFloat(10, 90) + \"%\";\n  cookie.style.left = randomFloat(10, 90) + \"%\";\n  /*when someone clicks on cookie*/\n  cookie.onclick = () => {\n    goldenCookieClicked(cookie);\n  };\n  document.getElementsByTagName(\"body\")[0].appendChild(cookie);\n  goldenCookieFadeIn(cookie);\n  setNextSpawnTime();\n}\n/*hw*/\nfunction goldenCookieClicked(cookie) {\n  let cookieGValue = Math.round(cookies * 1.15 + 13);\n  let cookieGValue2 = cps * 900 + 13;\n  if (cookieGValue < 100 && cookieGValue2 < 100) {\n    increaseCookieCount(100);\n  } else {\n    increaseCookieCount(Math.min(cookieGValue, cookieGValue2));\n  }\n  cookie.remove();\n  increaseCookieCount(Math.max(cookieGValue, 100));\n  //console.log(cookie);\n}\n\nfunction goldenCookieFadeIn(cookie) {\n  let increaseScaleAmount = randomFloat(0.0006, 0.001);\n  /**/\n  let increaseOpacityAmount = increaseScaleAmount * 1.2;\n  cookie.style.scale = 0;\n  cookie.style.opacity = 0;\n  let scale = 0;\n  let opacity = 0;\n  let interval = setInterval(function () {\n    if (scale >= 1) {\n      clearInterval(interval);\n      cookie.dataset.timeSpawned = Date.now() + randomInteger(1000, 2000);\n    }\n    if (opacity < 1) {\n      opacity = Math.min(1, opacity + increaseOpacityAmount);\n      cookie.style.opacity = opacity;\n    }\n\n    /*Math.min ensures it cannot exceed 1*/\n    scale = Math.min(1, scale + increaseScaleAmount);\n    cookie.style.scale = scale;\n  }, 10);\n}\nfunction goldenCookieFadeOut(cookie) {\n  let decreaseOpacityAmount = randomFloat(0.0006, 0.001);\n  /**/\n  let increaseOpacityAmount = decreaseOpacityAmount * 0.6;\n  cookie.style.scale = 0;\n  cookie.style.opacity = 0;\n  let scale = 1;\n  let opacity = 1;\n  let interval = setInterval(function () {\n    if (scale <= 0) {\n      clearInterval(interval);\n      cookie.remove();\n    }\n    if (opacity > 0) {\n      opacity = Math.max(0, opacity - decreaseOpacityAmount);\n      cookie.style.opacity = opacity;\n    }\n\n    /*Math.min ensures it cannot exceed 1*/\n    scale = Math.max(0, scale - decreaseOpacityAmount);\n    cookie.style.scale = scale;\n  }, 10);\n}\nexport function removeGoldenCookie() {\n  let goldenCookies = $(\".golden-cookie\");\n  goldenCookies = Array.from(goldenCookies);\n  goldenCookies = goldenCookies.filter(function (item) {\n    return Date.now() - item.dataset.timeSpawned > maxGCookieLife;\n  });\n  for (let goldenCookie of goldenCookies) {\n    if (goldenCookie.style.scale >= 1) {\n      goldenCookieFadeOut(goldenCookie);\n    }\n  }\n}","map":{"version":3,"names":["$","randomFloat","randomInteger","cookies","cps","increaseCookieCount","maxGCookieLife","Tmin","Tmax","nextSpawnInterval","convertGCookieTimeToMS","setNextSpawnTime","nextSpawnTime","window","setTimeout","spawnCookie","console","log","cookie","document","createElement","src","className","style","top","left","onclick","goldenCookieClicked","getElementsByTagName","appendChild","goldenCookieFadeIn","cookieGValue","Math","round","cookieGValue2","min","remove","max","increaseScaleAmount","increaseOpacityAmount","scale","opacity","interval","setInterval","clearInterval","dataset","timeSpawned","Date","now","goldenCookieFadeOut","decreaseOpacityAmount","removeGoldenCookie","goldenCookies","Array","from","filter","item","goldenCookie"],"sources":["C:/Users/lakho/Downloads/CookieClickerVue/CookieClickerVue/cookie-clicker_front-end/public/js/index/goldenCookie.js"],"sourcesContent":["import $ from 'jquery';\nimport {randomFloat,randomInteger} from '../site.js';\nimport {cookies, cps,increaseCookieCount} from './cookieHandler.js';\n\nconst maxGCookieLife = 13000;\nlet Tmin = 300;/*in seconds how long it takes for a cookie to appear*/\nlet Tmax = 900;\nlet nextSpawnInterval;\n\nexport function convertGCookieTimeToMS()\n{\n    Tmin *= 1000;\n    Tmax *= 1000;\n}\n\n/**/\n\nexport function setNextSpawnTime()\n{\n    let nextSpawnTime = randomFloat(Tmin, Tmax);\n    /* nextSpawnTime is the actual delay*/\n    nextSpawnInterval = window.setTimeout(spawnCookie, nextSpawnTime);\n    console.log(`Golden cookie will spawn in ${nextSpawnTime / 1000} seconds`);\n}\n\n\nfunction spawnCookie()\n{\n    let cookie = document.createElement(\"img\");\n    cookie.src = \"/images/goldCookie.png\";\n    cookie.className = \"golden-cookie\";\n    cookie.style.top = randomFloat(10, 90) + \"%\";\n    cookie.style.left = randomFloat(10, 90) + \"%\";\n    /*when someone clicks on cookie*/\n    cookie.onclick = () => { goldenCookieClicked(cookie); };\n    document.getElementsByTagName(\"body\")[0].appendChild(cookie);\n    goldenCookieFadeIn(cookie);\n    setNextSpawnTime();\n}\n/*hw*/\nfunction goldenCookieClicked(cookie)\n{\n\n    \n    let cookieGValue = Math.round((cookies * 1.15) + 13);\n    let cookieGValue2 = (cps * 900) + 13;\n\n    if (cookieGValue < 100 && cookieGValue2 < 100) {\n        increaseCookieCount(100);\n    }\n    else\n    {\n        increaseCookieCount(Math.min(cookieGValue, cookieGValue2));\n\n    }\n\n    cookie.remove();\n    increaseCookieCount(Math.max(cookieGValue,100));\n    //console.log(cookie);\n}\n\nfunction goldenCookieFadeIn(cookie)\n{\n    let increaseScaleAmount = randomFloat(0.0006, 0.001);\n    /**/ \n    let increaseOpacityAmount = increaseScaleAmount * 1.2;\n    cookie.style.scale = 0;\n    cookie.style.opacity = 0;\n    let scale = 0;\n    let opacity = 0;\n    let interval = setInterval(function ()\n    {\n        if (scale >= 1)\n        {\n            clearInterval(interval);\n            cookie.dataset.timeSpawned = Date.now() + randomInteger(1000, 2000);\n        }\n\n        if (opacity < 1)\n        {\n            opacity = Math.min(1, opacity + increaseOpacityAmount);\n            cookie.style.opacity = opacity;\n        }\n\n        /*Math.min ensures it cannot exceed 1*/\n        scale = Math.min(1, scale + increaseScaleAmount);\n        cookie.style.scale = scale;\n\n    }, 10);\n}\n\nfunction goldenCookieFadeOut(cookie)\n{\n    let decreaseOpacityAmount = randomFloat(0.0006, 0.001);\n    /**/\n    let increaseOpacityAmount = decreaseOpacityAmount * 0.6;\n    cookie.style.scale = 0;\n    cookie.style.opacity = 0;\n    let scale = 1;\n    let opacity = 1;\n    let interval = setInterval(function () {\n        if (scale <= 0) {\n            clearInterval(interval);\n            cookie.remove();\n        }\n\n        if (opacity > 0) {\n            opacity = Math.max(0, opacity - decreaseOpacityAmount);\n            cookie.style.opacity = opacity;\n        }\n\n        /*Math.min ensures it cannot exceed 1*/\n        scale = Math.max(0, scale - decreaseOpacityAmount);\n        cookie.style.scale = scale;\n\n    }, 10);\n\n}\n\nexport function removeGoldenCookie()\n{\n    let goldenCookies = $(\".golden-cookie\");\n    goldenCookies = Array.from(goldenCookies);\n\n\n    goldenCookies = goldenCookies.filter(function (item)\n    {\n        return Date.now() - item.dataset.timeSpawned > maxGCookieLife;\n    });\n\n    for (let goldenCookie of goldenCookies)\n    {\n        if (goldenCookie.style.scale >= 1)\n        {\n            goldenCookieFadeOut(goldenCookie);\n        }\n    }\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}