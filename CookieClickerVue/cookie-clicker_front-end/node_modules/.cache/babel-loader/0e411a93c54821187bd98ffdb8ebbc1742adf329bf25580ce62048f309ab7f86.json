{"ast":null,"code":"import { cookies, cps, cookiesGainedOnClick, bakedCookie } from '../../public/js/index/cookieHandler.js';\nimport { startTimer, getTimeOnPage } from '../../public/js/index/timeHelper.js';\nimport { goldenCookieClicks } from '../../public/js/index/goldenCookieClicks.js';\nexport default {\n  name: 'StatsSection',\n  data() {\n    return {\n      intervalId: null,\n      roundedCookies: Math.round(cookies),\n      statsCPS: cps,\n      //totalCookies: cookies,\n      timeOnPage: getTimeOnPage(),\n      clickCookies: cookiesGainedOnClick,\n      bakedCookies: bakedCookie,\n      goldenClicks: goldenCookieClicks\n    };\n  },\n  created() {\n    startTimer(); // start the timer when the component is created\n    this.intervalId = setInterval(() => {\n      this.roundedCookies = Math.round(cookies);\n      this.statsCPS = cps;\n      this.clickCookies = cookiesGainedOnClick;\n      this.bakedCookies = bakedCookie;\n      this.goldenClicks = goldenCookieClicks;\n      //this.totalCookies += Math.round(cookies) - this.roundedCookies;\n    }, 1000); // update every second\n  },\n\n  beforeUnmount() {\n    clearInterval(this.intervalId);\n  },\n  mounted() {\n    setInterval(() => {\n      this.timeOnPage = getTimeOnPage();\n    }, 1000);\n  }\n};","map":{"version":3,"mappings":"AA6GA,SAASA,OAAO,EAAEC,GAAG,EAAEC,oBAAoB,EAAEC,WAAU,QAAS,wCAAwC;AACxG,SAASC,UAAU,EAAEC,aAAY,QAAS,qCAAqC;AAC/E,SAASC,kBAAiB,QAAS,6CAA6C;AAGhF,eAAe;EACbC,IAAI,EAAE,cAAc;EACpBC,IAAI,GAAG;IACL,OAAO;MACLC,UAAU,EAAE,IAAI;MAChBC,cAAc,EAAEC,IAAI,CAACC,KAAK,CAACZ,OAAO,CAAC;MACnCa,QAAQ,EAAEZ,GAAG;MACb;MACAa,UAAU,EAAET,aAAa,EAAE;MAC3BU,YAAY,EAAEb,oBAAoB;MAClCc,YAAY,EAAEb,WAAW;MACzBc,YAAY,EAAEX;IAEhB,CAAC;EACH,CAAC;EACDY,OAAO,GAAG;IACRd,UAAU,EAAE,EAAE;IACd,IAAI,CAACK,UAAS,GAAIU,WAAW,CAAC,MAAM;MAClC,IAAI,CAACT,cAAa,GAAIC,IAAI,CAACC,KAAK,CAACZ,OAAO,CAAC;MACzC,IAAI,CAACa,QAAO,GAAIZ,GAAG;MACnB,IAAI,CAACc,YAAW,GAAIb,oBAAoB;MACxC,IAAI,CAACc,YAAW,GAAIb,WAAW;MAC/B,IAAI,CAACc,YAAW,GAAIX,kBAAkB;MACtC;IACF,CAAC,EAAE,IAAI,CAAC,EAAE;EACZ,CAAC;;EACDc,aAAa,GAAG;IACdC,aAAa,CAAC,IAAI,CAACZ,UAAU,CAAC;EAChC,CAAC;EACDa,OAAO,GAAG;IACRH,WAAW,CAAC,MAAM;MAChB,IAAI,CAACL,UAAS,GAAIT,aAAa,EAAE;IACnC,CAAC,EAAE,IAAI,CAAC;EACV;AACF,CAAC","names":["cookies","cps","cookiesGainedOnClick","bakedCookie","startTimer","getTimeOnPage","goldenCookieClicks","name","data","intervalId","roundedCookies","Math","round","statsCPS","timeOnPage","clickCookies","bakedCookies","goldenClicks","created","setInterval","beforeUnmount","clearInterval","mounted"],"sourceRoot":"","sources":["C:\\Users\\lakho\\OneDrive - southhills.edu\\Documents\\IT211\\CookieClickerVue\\CookieClickerVue\\cookie-clicker_front-end\\src\\components\\StatsSection.vue"],"sourcesContent":["<template>\r\n<div id=\"menu\" style=\"background-image: url('/images/darkNoise.jpg'); height: 875px;\">\r\n        <br>\r\n        <div class=\"section\">\r\n            Statistics\r\n        </div>\r\n        <div class=\"subsection\">\r\n            <div class=\"title\">\r\n                General\r\n            </div>\r\n            <div id=\"statsGeneral\"></div>\r\n            <div class=\"listing\">\r\n                <b>Cookies in bank:</b>\r\n                <div class=\"price plain\">\r\n                <div class=\"tinyCookie\"></div>\r\n                {{ roundedCookies }}\r\n                </div>\r\n            </div>\r\n            <div class=\"listing\">\r\n                <b>Cookies baked (this ascension):</b>\r\n                <div class=\"price plain\">\r\n                <div class=\"tinyCookie\"></div>\r\n                0\r\n                </div>\r\n            </div>\r\n            <div class=\"listing\">\r\n                <b>Cookies baked (all time):</b>\r\n                <div class=\"price plain\">\r\n                <div class=\"tinyCookie\"></div>\r\n                {{ totalCookies }}\r\n                </div>\r\n            </div>\r\n            <div class=\"listing\">\r\n                <b>Run started:</b>\r\n                {{ timeOnPage }}\r\n            </div>\r\n            <div class=\"listing\">\r\n                <b>Buildings owned:</b>\r\n                0\r\n            </div>\r\n            <div class=\"listing\">\r\n                <b>Cookies per second:</b>\r\n                {{ statsCPS }}\r\n                <small>(multiplier: 100%)</small>\r\n            </div>\r\n            <div class=\"listing\">\r\n                <b>Raw cookies per second:</b>\r\n                {{ statsCPS }}\r\n                <small>(highest this ascension)</small>\r\n            </div>\r\n            <div class=\"listing\">\r\n                <b>Cookies per click:</b>\r\n                {{ clickCookies }}\r\n            </div>\r\n            <div class=\"listing\">\r\n                <b>Cookie clicks:</b>\r\n                {{ bakedCookies }}\r\n            </div>\r\n            <div class=\"listing\">\r\n                <b>Hand-made cookies:</b>\r\n            </div>\r\n            <div class=\"listing\">\r\n                <b>Golden cookie clicks: </b>\r\n                {{  g }}\r\n                <small>(all time: 0)</small>\r\n            </div>\r\n            <br>\r\n            <div class=\"listing\">\r\n                <b>Running version:</b>\r\n                2.048\r\n            </div>\r\n        </div>\r\n        <div class=\"subsection\">\r\n            <div class=\"title\">\r\n                Upgrades\r\n            </div>\r\n            <div id=\"statsUpgrade\">\r\n                <div class=\"listing\">\r\n                    <b>Upgrades unlocked:</b>\r\n                    0/663 (0%)\r\n                <div class=\"listing crateBox\">\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"subsection\">\r\n            <div class=\"title\">\r\n                Achievements\r\n            </div>\r\n            <div id=\"statsAchievs\">\r\n                <div class=\"listing\">\r\n                    <b>Upgrades unlocked:</b>\r\n                    0/663 (0%)\r\n                </div>\r\n                <div class=\"listing\">\r\n                    <b>Milk:</b>\r\n                    Plain milk\r\n                </div>\r\n                <div class=\"listing\">\r\n                    <b>Milk flavors unlocked:</b>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div style=\"padding-bottom: 128px;\"></div>\r\n    </div>\r\n</div>\r\n</template>\r\n\r\n<script>\r\nimport { cookies, cps, cookiesGainedOnClick, bakedCookie } from '../../public/js/index/cookieHandler.js';\r\nimport { startTimer, getTimeOnPage } from '../../public/js/index/timeHelper.js';\r\nimport { goldenCookieClicks } from '../../public/js/index/goldenCookieClicks.js';\r\n\r\n\r\nexport default {\r\n  name: 'StatsSection',\r\n  data() {\r\n    return {\r\n      intervalId: null,\r\n      roundedCookies: Math.round(cookies),\r\n      statsCPS: cps,\r\n      //totalCookies: cookies,\r\n      timeOnPage: getTimeOnPage(),\r\n      clickCookies: cookiesGainedOnClick,\r\n      bakedCookies: bakedCookie,\r\n      goldenClicks: goldenCookieClicks,\r\n\r\n    };\r\n  },\r\n  created() {\r\n    startTimer(); // start the timer when the component is created\r\n    this.intervalId = setInterval(() => {\r\n      this.roundedCookies = Math.round(cookies);\r\n      this.statsCPS = cps;\r\n      this.clickCookies = cookiesGainedOnClick;\r\n      this.bakedCookies = bakedCookie;\r\n      this.goldenClicks = goldenCookieClicks;\r\n      //this.totalCookies += Math.round(cookies) - this.roundedCookies;\r\n    }, 1000); // update every second\r\n  },\r\n  beforeUnmount() {\r\n    clearInterval(this.intervalId);\r\n  },\r\n  mounted() {\r\n    setInterval(() => {\r\n      this.timeOnPage = getTimeOnPage();\r\n    }, 1000);\r\n  },\r\n};\r\n</script>\r\n\r\n<style>\r\n\r\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}