{"ast":null,"code":"import { cookies } from '../../public/js/index/cookieHandler.js';\nimport { startTimer, getTimeOnPage } from '../../public/js/index/timeHelper.js';\nexport default {\n  data() {\n    return {\n      timePlayed: '0:00:00',\n      cookiesEarned: 0\n    };\n  },\n  mounted() {\n    this.startTimer();\n  },\n  methods: {\n    startTimer() {\n      const startTime = new Date();\n      setInterval(() => {\n        const currentTime = new Date();\n        const timeDiff = currentTime.getTime() - startTime.getTime();\n        const hours = Math.floor(timeDiff / (1000 * 60 * 60));\n        const minutes = Math.floor(timeDiff % (1000 * 60 * 60) / (1000 * 60));\n        const seconds = Math.floor(timeDiff % (1000 * 60) / 1000);\n        this.timePlayed = `${hours}:${minutes.toString().padStart(2, '0')}:${seconds.toString().padStart(2, '0')}`;\n      }, 1000);\n    }\n  }\n};","map":{"version":3,"mappings":"AA2GA,SAASA,OAAM,QAAS,wCAAwC;AAChE,SAASC,UAAU,EAAEC,aAAY,QAAS,qCAAqC;AAE/E,eAAe;EACbC,IAAI,GAAG;IACL,OAAO;MACLC,UAAU,EAAE,SAAS;MACrBC,aAAa,EAAE;IACjB,CAAC;EACH,CAAC;EACDC,OAAO,GAAG;IACR,IAAI,CAACL,UAAU,EAAE;EACnB,CAAC;EACDM,OAAO,EAAE;IACPN,UAAU,GAAG;MACX,MAAMO,SAAQ,GAAI,IAAIC,IAAI,EAAE;MAC5BC,WAAW,CAAC,MAAM;QAChB,MAAMC,WAAU,GAAI,IAAIF,IAAI,EAAE;QAC9B,MAAMG,QAAO,GAAID,WAAW,CAACE,OAAO,EAAC,GAAIL,SAAS,CAACK,OAAO,EAAE;QAC5D,MAAMC,KAAI,GAAIC,IAAI,CAACC,KAAK,CAACJ,QAAO,IAAK,IAAG,GAAI,EAAC,GAAI,EAAE,CAAC,CAAC;QACrD,MAAMK,OAAM,GAAIF,IAAI,CAACC,KAAK,CAAEJ,QAAO,IAAK,IAAG,GAAI,EAAC,GAAI,EAAE,CAAC,IAAK,IAAG,GAAI,EAAE,CAAC,CAAC;QACvE,MAAMM,OAAM,GAAIH,IAAI,CAACC,KAAK,CAAEJ,QAAO,IAAK,IAAG,GAAI,EAAE,CAAC,GAAI,IAAI,CAAC;QAC3D,IAAI,CAACR,UAAS,GAAK,GAAEU,KAAM,IAAGG,OAAO,CAACE,QAAQ,EAAE,CAACC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAE,IAAGF,OAAO,CAACC,QAAQ,EAAE,CAACC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAE,EAAC;MAC5G,CAAC,EAAE,IAAI,CAAC;IACV;EACF;AACF,CAAC","names":["cookies","startTimer","getTimeOnPage","data","timePlayed","cookiesEarned","mounted","methods","startTime","Date","setInterval","currentTime","timeDiff","getTime","hours","Math","floor","minutes","seconds","toString","padStart"],"sourceRoot":"","sources":["C:\\Users\\lakho\\OneDrive - southhills.edu\\Documents\\IT211\\CookieClickerVue\\CookieClickerVue\\cookie-clicker_front-end\\src\\components\\StatsSection.vue"],"sourcesContent":["<template>\r\n<div id=\"menu\" style=\"background-image: url('/images/darkNoise.jpg'); height: 875px;\">\r\n        <br>\r\n        <div class=\"section\">\r\n            Statistics\r\n        </div>\r\n        <div class=\"subsection\">\r\n            <div class=\"title\">\r\n                General\r\n            </div>\r\n            <div id=\"statsGeneral\"></div>\r\n            <div class=\"listing\">\r\n                <b>Cookies in bank:</b>\r\n                <div class=\"price plain\">\r\n                <div class=\"tinyCookie\"></div>\r\n                {{ roundedCookies }}\r\n                </div>\r\n            </div>\r\n            <div class=\"listing\">\r\n                <b>Cookies baked (this ascension):</b>\r\n                <div class=\"price plain\">\r\n                <div class=\"tinyCookie\"></div>\r\n                0\r\n                </div>\r\n            </div>\r\n            <div class=\"listing\">\r\n                <b>Cookies baked (all time):</b>\r\n                <div class=\"price plain\">\r\n                <div class=\"tinyCookie\"></div>\r\n                {{ totalCookies }}\r\n                </div>\r\n            </div>\r\n            <div class=\"listing\">\r\n                <b>Run started:</b>\r\n                {{ timePlayed }}\r\n            </div>\r\n            <div class=\"listing\">\r\n                <b>Buildings owned:</b>\r\n                0\r\n            </div>\r\n            <div class=\"listing\">\r\n                <b>Cookies per second:</b>\r\n                0\r\n                <small>(multiplier: 100%)</small>\r\n            </div>\r\n            <div class=\"listing\">\r\n                <b>Raw cookies per second:</b>\r\n                0\r\n                <small>(highest this ascension)</small>\r\n            </div>\r\n            <div class=\"listing\">\r\n                <b>Raw cookies click:</b>\r\n            </div>\r\n            <div class=\"listing\">\r\n                <b>Cookie clicks:</b>\r\n            </div>\r\n            <div class=\"listing\">\r\n                <b>Hand-made cookies:</b>\r\n            </div>\r\n            <div class=\"listing\">\r\n                <b>Golden cookie clicks: </b>\r\n                0\r\n                <small>(all time: 0)</small>\r\n            </div>\r\n            <br>\r\n            <div class=\"listing\">\r\n                <b>Running version:</b>\r\n                2.048\r\n            </div>\r\n        </div>\r\n        <div class=\"subsection\">\r\n            <div class=\"title\">\r\n                Upgrades\r\n            </div>\r\n            <div id=\"statsUpgrade\">\r\n                <div class=\"listing\">\r\n                    <b>Upgrades unlocked:</b>\r\n                    0/663 (0%)\r\n                <div class=\"listing crateBox\">\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"subsection\">\r\n            <div class=\"title\">\r\n                Achievements\r\n            </div>\r\n            <div id=\"statsAchievs\">\r\n                <div class=\"listing\">\r\n                    <b>Upgrades unlocked:</b>\r\n                    0/663 (0%)\r\n                </div>\r\n                <div class=\"listing\">\r\n                    <b>Milk:</b>\r\n                    Plain milk\r\n                </div>\r\n                <div class=\"listing\">\r\n                    <b>Milk flavors unlocked:</b>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div style=\"padding-bottom: 128px;\"></div>\r\n    </div>\r\n</div>\r\n</template>\r\n\r\n<script>\r\nimport { cookies } from '../../public/js/index/cookieHandler.js';\r\nimport { startTimer, getTimeOnPage } from '../../public/js/index/timeHelper.js';\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      timePlayed: '0:00:00',\r\n      cookiesEarned: 0,\r\n    };\r\n  },\r\n  mounted() {\r\n    this.startTimer();\r\n  },\r\n  methods: {\r\n    startTimer() {\r\n      const startTime = new Date();\r\n      setInterval(() => {\r\n        const currentTime = new Date();\r\n        const timeDiff = currentTime.getTime() - startTime.getTime();\r\n        const hours = Math.floor(timeDiff / (1000 * 60 * 60));\r\n        const minutes = Math.floor((timeDiff % (1000 * 60 * 60)) / (1000 * 60));\r\n        const seconds = Math.floor((timeDiff % (1000 * 60)) / 1000);\r\n        this.timePlayed = `${hours}:${minutes.toString().padStart(2, '0')}:${seconds.toString().padStart(2, '0')}`;\r\n      }, 1000);\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style>\r\n\r\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}