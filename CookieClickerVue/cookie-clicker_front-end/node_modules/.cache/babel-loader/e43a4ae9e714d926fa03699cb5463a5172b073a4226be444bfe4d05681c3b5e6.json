{"ast":null,"code":"import $ from \"jquery\";\nimport { createToast } from \"./toastController.js\";\nimport * as cookieHandler from \"./cookieHandler.js\";\nimport * as upgradeHandler from \"./cpsUpgradeHandler.js\";\nimport CpsWorker from \"./cpsWorker\";\nexport function clear() {\n  document.cookie = \"cookies=; expires=Thu, 01 Jan 1970 00:00:00 GMT; SameSite=None; Secure;\";\n  document.cookie = \"bakeryName=; expires=Thu, 01 Jan 1970 00:00:00 GMT; SameSite=None; Secure;\";\n  document.cookie = \"cursors=; expires=Thu, 01 Jan 1970 00:00:00 GMT; SameSite=None; Secure;\";\n  document.cookie = \"grandmas=; expires=Thu, 01 Jan 1970 00:00:00 GMT; SameSite=None; Secure;\";\n  location.reload();\n}\nexport function save() {\n  console.log(\"cookie stuff is happenin\");\n  createToast(\"Game saved\", 2000);\n  let timeElapsed = 0;\n  let name = $(\"#bakery-name\").text();\n  //save cookies and bakery name\n  document.cookie = `cookies=${cookieHandler.cookies}; SameSite=none; Secure; expires=Fri, 31 Dec 9999 23:59:59`;\n  document.cookie = `bakeryName=${$(\"#bakery-name\").text()}; SameSite=None; Secure; expires=Fri, 31 Dec 9999 23:59:59 GMT`;\n  document.cookie = `cursors=${upgradeHandler.cursors}; SameSite=none; Secure; expires=Fri, 31 Dec 9999 23:59:59`;\n  document.cookie = `grandmas=${upgradeHandler.grandmas}; SameSite=none; Secure; expires=Fri, 31 Dec 9999 23:59:59`;\n}\nexport function load() {\n  cookieHandler.changeAmountOfCookies(Number(getCookie(\"cookies\")));\n  /*below is how we handle the first time loading a page*/\n\n  cookieHandler.changeAmountOfCookies(isNaN(cookieHandler.cookies) ? 0 : cookieHandler.cookies);\n  $(\"#bakery-name\").text(getCookie(\"bakeryName\"));\n  console.log(getCookie(\"bakeryName\"));\n  let cursors = Number(getCookie(\"cursors\"));\n  let grandmas = Number(getCookie(\"grandmas\"));\n  upgradeHandler.load(cursors, grandmas);\n}\nfunction getCookie(name) {\n  return document.cookie.split(\"; \").find(row => row.startsWith(`${name}=`))?.split(\"=\")[1];\n}\nlet cpsWorker = new CpsWorker();\nlet cpsIntervalId = null;\nfunction startCpsInterval() {\n  cpsWorker.postMessage(\"start\");\n  cpsWorker.onmessage = function (e) {\n    let newCps = e.data;\n    cps = newCps;\n  };\n}\nfunction stopCpsInterval() {\n  cpsWorker.postMessage(\"stop\");\n}\nfunction updateCps() {\n  cpsWorker.postMessage(cps);\n}\nexport function loadGame() {\n  // Load the saved game data\n  let savedData = localStorage.getItem(\"gameSave\");\n  if (savedData) {\n    let data = JSON.parse(savedData);\n    cookies = data.cookies;\n    cps = data.cps;\n  }\n  // Start the cps interval\n  startCpsInterval();\n}\nexport function saveGame() {\n  // Save the game data\n  let data = {\n    cookies: cookies,\n    cps: cps\n  };\n  localStorage.setItem(\"gameSave\", JSON.stringify(data));\n}\nexport function resetGame() {\n  // Reset the game data\n  cookies = 0;\n  cps = 0;\n  // Stop the cps interval\n  stopCpsInterval();\n}\nexport function increaseCookieCount(amount) {\n  cookies += amount;\n  updateCps();\n}\nexport function changeAmountOfCookies(amount) {\n  cookies = amount;\n  updateCps();\n}\nexport function changeCps(amount) {\n  cps = amount;\n  updateCps();\n}","map":{"version":3,"names":["$","createToast","cookieHandler","upgradeHandler","CpsWorker","clear","document","cookie","location","reload","save","console","log","timeElapsed","name","text","cookies","cursors","grandmas","load","changeAmountOfCookies","Number","getCookie","isNaN","split","find","row","startsWith","cpsWorker","cpsIntervalId","startCpsInterval","postMessage","onmessage","e","newCps","data","cps","stopCpsInterval","updateCps","loadGame","savedData","localStorage","getItem","JSON","parse","saveGame","setItem","stringify","resetGame","increaseCookieCount","amount","changeCps"],"sources":["C:/Users/lakho/OneDrive - southhills.edu/Documents/IT211/CookieClickerVue/CookieClickerVue/cookie-clicker_front-end/public/js/index/gameSaveManager.js"],"sourcesContent":["import $ from \"jquery\";\nimport {createToast} from \"./toastController.js\";\nimport * as cookieHandler from \"./cookieHandler.js\"\nimport * as upgradeHandler from \"./cpsUpgradeHandler.js\"\nimport CpsWorker from \"./cpsWorker\"\n\nexport function clear()\n{\n    document.cookie = \"cookies=; expires=Thu, 01 Jan 1970 00:00:00 GMT; SameSite=None; Secure;\";\n    document.cookie = \"bakeryName=; expires=Thu, 01 Jan 1970 00:00:00 GMT; SameSite=None; Secure;\";\n    document.cookie = \"cursors=; expires=Thu, 01 Jan 1970 00:00:00 GMT; SameSite=None; Secure;\";\n    document.cookie = \"grandmas=; expires=Thu, 01 Jan 1970 00:00:00 GMT; SameSite=None; Secure;\";\n    location.reload();\n}\n\nexport function save()\n{\n    console.log(\"cookie stuff is happenin\");\n    createToast(\"Game saved\", 2000);\n    let timeElapsed = 0;\n    let name = $(\"#bakery-name\").text();\n    //save cookies and bakery name\n    document.cookie = `cookies=${cookieHandler.cookies}; SameSite=none; Secure; expires=Fri, 31 Dec 9999 23:59:59`;\n    document.cookie = `bakeryName=${$(\"#bakery-name\").text()}; SameSite=None; Secure; expires=Fri, 31 Dec 9999 23:59:59 GMT`;\n    document.cookie = `cursors=${upgradeHandler.cursors}; SameSite=none; Secure; expires=Fri, 31 Dec 9999 23:59:59`;\n    document.cookie = `grandmas=${upgradeHandler.grandmas}; SameSite=none; Secure; expires=Fri, 31 Dec 9999 23:59:59`;\n}\n\nexport function load()\n{\n    \n    cookieHandler.changeAmountOfCookies(Number(getCookie(\"cookies\")));\n    /*below is how we handle the first time loading a page*/\n\n    cookieHandler.changeAmountOfCookies(isNaN(cookieHandler.cookies) ? 0 : cookieHandler.cookies);\n    $(\"#bakery-name\").text(getCookie(\"bakeryName\"));\n    console.log(getCookie(\"bakeryName\"));\n\n    let cursors = Number(getCookie(\"cursors\"));\n    let grandmas = Number(getCookie(\"grandmas\"));\n    upgradeHandler.load(cursors,grandmas);\n}\n\nfunction getCookie(name)\n{\n   return document.cookie.split(\"; \").find((row) => row.startsWith(`${name}=`))?.split(\"=\")[1];\n}\n\nlet cpsWorker = new CpsWorker();\nlet cpsIntervalId = null;\n\nfunction startCpsInterval() {\n  cpsWorker.postMessage(\"start\");\n  cpsWorker.onmessage = function(e) {\n    let newCps = e.data;\n    cps = newCps;\n  };\n}\n\nfunction stopCpsInterval() {\n  cpsWorker.postMessage(\"stop\");\n}\n\nfunction updateCps() {\n  cpsWorker.postMessage(cps);\n}\n\nexport function loadGame() {\n  // Load the saved game data\n  let savedData = localStorage.getItem(\"gameSave\");\n  if (savedData) {\n    let data = JSON.parse(savedData);\n    cookies = data.cookies;\n    cps = data.cps;\n  }\n  // Start the cps interval\n  startCpsInterval();\n}\n\nexport function saveGame() {\n  // Save the game data\n  let data = {\n    cookies: cookies,\n    cps: cps\n  };\n  localStorage.setItem(\"gameSave\", JSON.stringify(data));\n}\n\nexport function resetGame() {\n  // Reset the game data\n  cookies = 0;\n  cps = 0;\n  // Stop the cps interval\n  stopCpsInterval();\n}\n\nexport function increaseCookieCount(amount) {\n  cookies += amount;\n  updateCps();\n}\n\nexport function changeAmountOfCookies(amount) {\n  cookies = amount;\n  updateCps();\n}\n\nexport function changeCps(amount) {\n  cps = amount;\n  updateCps();\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}