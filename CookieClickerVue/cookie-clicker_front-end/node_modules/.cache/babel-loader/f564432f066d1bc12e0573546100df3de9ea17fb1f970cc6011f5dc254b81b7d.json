{"ast":null,"code":"import { roundToNearest } from \"../site.js\";\n\n//global variables\nexport let cookies = 0;\nlet cookiesGainedOnClick = 1;\nexport let cps = 0;\nlet cpsInterval;\nexport function cookieClicked() {\n  cookies += cookiesGainedOnClick;\n  updateGUI();\n}\nfunction updateGUI() {\n  document.getElementById(\"cookie-counter\").innerHTML = roundToNearest(cookies, 0);\n  document.getElementById(\"cps-counter\").innerHTML = roundToNearest(cps, 1);\n}\nexport function increaseCookieCount(amount) {\n  cookies += amount;\n  updateGUI();\n}\nexport function changeAmountOfCookies(amount) {\n  cookies = amount;\n  updateGUI();\n}\nexport function changeCps(amount) {\n  cps = amount;\n  clearInterval(cpsInterval);\n  cpsInterval = setInterval(calculateCPS, 10);\n}\nexport function calculateCPS() {\n  cookies += cps / 100;\n  updateGUI();\n}\n\n// Increment cookies every second\nsetInterval(function () {\n  cookies += cps / 10;\n  updateGUI();\n}, 100);","map":{"version":3,"names":["roundToNearest","cookies","cookiesGainedOnClick","cps","cpsInterval","cookieClicked","updateGUI","document","getElementById","innerHTML","increaseCookieCount","amount","changeAmountOfCookies","changeCps","clearInterval","setInterval","calculateCPS"],"sources":["C:/Users/lakho/OneDrive - southhills.edu/Documents/IT211/CookieClickerVue/CookieClickerVue/cookie-clicker_front-end/public/js/index/cookieHandler.js"],"sourcesContent":["import { roundToNearest } from \"../site.js\";\n\n//global variables\nexport let cookies = 0;\nlet cookiesGainedOnClick = 1;\nexport let cps = 0;\nlet cpsInterval;\n\nexport function cookieClicked() {\n  cookies += cookiesGainedOnClick;\n  updateGUI();\n}\n\nfunction updateGUI() {\n  document.getElementById(\"cookie-counter\").innerHTML = roundToNearest(cookies, 0);\n  document.getElementById(\"cps-counter\").innerHTML = roundToNearest(cps, 1);\n}\n\nexport function increaseCookieCount(amount) {\n  cookies += amount;\n  updateGUI();\n}\n\nexport function changeAmountOfCookies(amount) {\n  cookies = amount;\n  updateGUI();\n}\n\nexport function changeCps(amount) {\n  cps = amount;\n  clearInterval(cpsInterval);\n  cpsInterval = setInterval(calculateCPS, 10);\n}\n\nexport function calculateCPS() {\n  cookies += cps / 100;\n  updateGUI();\n}\n\n// Increment cookies every second\nsetInterval(function() {\n  cookies += cps / 10;\n  updateGUI();\n}, 100);"],"mappings":"AAAA,SAASA,cAAc,QAAQ,YAAY;;AAE3C;AACA,OAAO,IAAIC,OAAO,GAAG,CAAC;AACtB,IAAIC,oBAAoB,GAAG,CAAC;AAC5B,OAAO,IAAIC,GAAG,GAAG,CAAC;AAClB,IAAIC,WAAW;AAEf,OAAO,SAASC,aAAa,GAAG;EAC9BJ,OAAO,IAAIC,oBAAoB;EAC/BI,SAAS,EAAE;AACb;AAEA,SAASA,SAAS,GAAG;EACnBC,QAAQ,CAACC,cAAc,CAAC,gBAAgB,CAAC,CAACC,SAAS,GAAGT,cAAc,CAACC,OAAO,EAAE,CAAC,CAAC;EAChFM,QAAQ,CAACC,cAAc,CAAC,aAAa,CAAC,CAACC,SAAS,GAAGT,cAAc,CAACG,GAAG,EAAE,CAAC,CAAC;AAC3E;AAEA,OAAO,SAASO,mBAAmB,CAACC,MAAM,EAAE;EAC1CV,OAAO,IAAIU,MAAM;EACjBL,SAAS,EAAE;AACb;AAEA,OAAO,SAASM,qBAAqB,CAACD,MAAM,EAAE;EAC5CV,OAAO,GAAGU,MAAM;EAChBL,SAAS,EAAE;AACb;AAEA,OAAO,SAASO,SAAS,CAACF,MAAM,EAAE;EAChCR,GAAG,GAAGQ,MAAM;EACZG,aAAa,CAACV,WAAW,CAAC;EAC1BA,WAAW,GAAGW,WAAW,CAACC,YAAY,EAAE,EAAE,CAAC;AAC7C;AAEA,OAAO,SAASA,YAAY,GAAG;EAC7Bf,OAAO,IAAIE,GAAG,GAAG,GAAG;EACpBG,SAAS,EAAE;AACb;;AAEA;AACAS,WAAW,CAAC,YAAW;EACrBd,OAAO,IAAIE,GAAG,GAAG,EAAE;EACnBG,SAAS,EAAE;AACb,CAAC,EAAE,GAAG,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}