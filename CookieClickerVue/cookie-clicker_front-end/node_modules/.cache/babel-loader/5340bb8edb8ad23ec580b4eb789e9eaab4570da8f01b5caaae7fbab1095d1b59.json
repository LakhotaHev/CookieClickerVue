{"ast":null,"code":"import * as cookieHandler from '../../public/js/index/cookieHandler.js';\nexport default {\n  data() {\n    return {\n      sounds: [new Audio('/sounds/clickb1.mp3'), new Audio('/sounds/clickb2.mp3'), new Audio('/sounds/clickb3.mp3'), new Audio('/sounds/clickb4.mp3'), new Audio('/sounds/clickb5.mp3'), new Audio('/sounds/clickb6.mp3'), new Audio('/sounds/clickb7.mp3')]\n    };\n  },\n  name: 'CookieClicker',\n  methods: {\n    doCookieClicked: function () {\n      console.log(\"clicked\");\n      cookieHandler.cookieClicked();\n      const index = Math.floor(Math.random() * this.sounds.length);\n      const sound = this.sounds[index];\n      sound.play();\n      const cookieButton = document.getElementById('cookie-button');\n      const cookieAnimation = document.getElementById('cookie-animation');\n      cookieButton.addEventListener('click', event => {\n        // Create a new image element with the cookie image\n        const cookieImage = new Image();\n        cookieImage.src = 'cookie.png';\n        cookieImage.classList.add('cookie-animation');\n\n        // Position the cookie image at the mouse cursor\n        cookieImage.style.left = `${event.clientX}px`;\n        cookieImage.style.top = `${event.clientY}px`;\n\n        // Add the cookie image to the animation container\n        cookieAnimation.appendChild(cookieImage);\n\n        // After a short delay, start the CSS animation\n        setTimeout(() => {\n          cookieImage.style.animation = 'cookie-fly 1s ease-out forwards';\n        }, 10);\n\n        // After the animation is complete, remove the cookie image\n        setTimeout(() => {\n          cookieAnimation.removeChild(cookieImage);\n        }, 1000);\n      });\n    }\n  }\n};\nsetInterval(cookieHandler.calculateCPS, 10);","map":{"version":3,"mappings":"AAYI,OAAO,KAAKA,aAAY,MAAO,wCAAwC;AAEvE,eAAe;EACXC,IAAI,GAAG;IACH,OAAO;MACHC,MAAM,EAAE,CACJ,IAAIC,KAAK,CAAC,qBAAqB,CAAC,EAChC,IAAIA,KAAK,CAAC,qBAAqB,CAAC,EAChC,IAAIA,KAAK,CAAC,qBAAqB,CAAC,EAChC,IAAIA,KAAK,CAAC,qBAAqB,CAAC,EAChC,IAAIA,KAAK,CAAC,qBAAqB,CAAC,EAChC,IAAIA,KAAK,CAAC,qBAAqB,CAAC,EAChC,IAAIA,KAAK,CAAC,qBAAqB,CAAC;IAEhD;EACF,CAAC;EACCC,IAAI,EAAE,eAAe;EACrBC,OAAO,EACP;IACIC,eAAe,EAAE,YACjB;MACIC,OAAO,CAACC,GAAG,CAAC,SAAS,CAAC;MACtBR,aAAa,CAACS,aAAa,EAAE;MAC7B,MAAMC,KAAI,GAAIC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,EAAC,GAAI,IAAI,CAACX,MAAM,CAACY,MAAM,CAAC;MAC5D,MAAMC,KAAI,GAAI,IAAI,CAACb,MAAM,CAACQ,KAAK,CAAC;MAChCK,KAAK,CAACC,IAAI,EAAE;MACZ,MAAMC,YAAW,GAAIC,QAAQ,CAACC,cAAc,CAAC,eAAe,CAAC;MACjE,MAAMC,eAAc,GAAIF,QAAQ,CAACC,cAAc,CAAC,kBAAkB,CAAC;MAEnEF,YAAY,CAACI,gBAAgB,CAAC,OAAO,EAAGC,KAAK,IAAK;QAClD;QACA,MAAMC,WAAU,GAAI,IAAIC,KAAK,EAAE;QAC/BD,WAAW,CAACE,GAAE,GAAI,YAAY;QAC9BF,WAAW,CAACG,SAAS,CAACC,GAAG,CAAC,kBAAkB,CAAC;;QAE7C;QACAJ,WAAW,CAACK,KAAK,CAACC,IAAG,GAAK,GAAEP,KAAK,CAACQ,OAAQ,IAAG;QAC7CP,WAAW,CAACK,KAAK,CAACG,GAAE,GAAK,GAAET,KAAK,CAACU,OAAQ,IAAG;;QAE5C;QACAZ,eAAe,CAACa,WAAW,CAACV,WAAW,CAAC;;QAExC;QACAW,UAAU,CAAC,MAAM;UACbX,WAAW,CAACK,KAAK,CAACO,SAAQ,GAAI,iCAAiC;QACnE,CAAC,EAAE,EAAE,CAAC;;QAEN;QACAD,UAAU,CAAC,MAAM;UACbd,eAAe,CAACgB,WAAW,CAACb,WAAW,CAAC;QAC5C,CAAC,EAAE,IAAI,CAAC;MACR,CAAC,CAAC;IAEF;EACJ;AACJ;AAEAc,WAAW,CAACrC,aAAa,CAACsC,YAAY,EAAE,EAAE,CAAC","names":["cookieHandler","data","sounds","Audio","name","methods","doCookieClicked","console","log","cookieClicked","index","Math","floor","random","length","sound","play","cookieButton","document","getElementById","cookieAnimation","addEventListener","event","cookieImage","Image","src","classList","add","style","left","clientX","top","clientY","appendChild","setTimeout","animation","removeChild","setInterval","calculateCPS"],"sourceRoot":"","sources":["C:\\Users\\lakho\\OneDrive - southhills.edu\\Documents\\IT211\\CookieClickerVue\\CookieClickerVue\\cookie-clicker_front-end\\src\\components\\Cookie.vue"],"sourcesContent":["<template>\n    <div class=\"cookie-container\">\n        <img class=\"shine\" draggable=\"false\" src=\"/images/shine.png\" />\n        <!--two classes shine and reverse-->\n        <img class=\"shine reverse\" draggable=\"false\" src=\"/images/shine.png\" />\n        <img @click=\"doCookieClicked()\" id=\"cookie-button\" src=\"/images/cookie.png\" draggable=\"false\" />\n        <div id=\"cookie-animation\"></div>\n    </div>\n</template>\n\n<script>\n    \n    import * as cookieHandler from '../../public/js/index/cookieHandler.js';\n\n    export default {\n        data() {\n            return {\n                sounds: [\n                    new Audio('/sounds/clickb1.mp3'),\n                    new Audio('/sounds/clickb2.mp3'),\n                    new Audio('/sounds/clickb3.mp3'),\n                    new Audio('/sounds/clickb4.mp3'),\n                    new Audio('/sounds/clickb5.mp3'),\n                    new Audio('/sounds/clickb6.mp3'),\n                    new Audio('/sounds/clickb7.mp3'),\n            ]\n    }\n  },\n    name: 'CookieClicker',\n    methods:\n    {\n        doCookieClicked: function() \n        {\n            console.log(\"clicked\");\n            cookieHandler.cookieClicked();\n            const index = Math.floor(Math.random() * this.sounds.length);\n            const sound = this.sounds[index];\n            sound.play();\n            const cookieButton = document.getElementById('cookie-button');\n        const cookieAnimation = document.getElementById('cookie-animation');\n\n        cookieButton.addEventListener('click', (event) => {\n        // Create a new image element with the cookie image\n        const cookieImage = new Image();\n        cookieImage.src = 'cookie.png';\n        cookieImage.classList.add('cookie-animation');\n\n        // Position the cookie image at the mouse cursor\n        cookieImage.style.left = `${event.clientX}px`;\n        cookieImage.style.top = `${event.clientY}px`;\n\n        // Add the cookie image to the animation container\n        cookieAnimation.appendChild(cookieImage);\n\n        // After a short delay, start the CSS animation\n        setTimeout(() => {\n            cookieImage.style.animation = 'cookie-fly 1s ease-out forwards';\n        }, 10);\n\n        // After the animation is complete, remove the cookie image\n        setTimeout(() => {\n            cookieAnimation.removeChild(cookieImage);\n        }, 1000);\n        });\n\n        }\n    }\n}\n\nsetInterval(cookieHandler.calculateCPS, 10);\n\n\n</script>\n\n<style scoped>\n#cookie-animation {\n  position: absolute;\n  top: 0;\n  left: 0;\n  pointer-events: none;\n}\n\n@keyframes cookie-fly {\n  0% {\n    transform: translate(0, 0) scale(1);\n    opacity: 1;\n  }\n  50% {\n    transform: translate(200px, -100px) scale(0.5);\n    opacity: 0.5;\n  }\n  100% {\n    transform: translate(400px, -200px) scale(0.2);\n    opacity: 0;\n  }\n}\n.cookie-container {\n    position: relative;\n    margin: auto;\n    margin-top: 16%;\n    width: 45%;\n    min-width: 250px;\n    user-select: none;\n   \n}\n\n    .cookie-container .shine {\n        position: absolute;\n        top: 0;\n        left: 0;\n        width: 100%;\n        /**/\n        scale: 2;\n        border-radius: 100%;\n        display: block;\n        /*50% transparent*/\n        opacity: 0.5;\n        animation-name: spin;\n        /**/\n        animation-duration: 20s;\n        animation-iteration-count: infinite;\n        /*keep it moving the same way the whole time*/\n        animation-timing-function: linear;\n        z-index: -1;\n    }\n        /*by not having a space its an && statement*/\n        .cookie-container .shine.reverse {\n            scale: 1.8;\n            opacity: 0.4;\n            /*if it has both classes it will play reverse*/\n            animation-direction: reverse;\n            animation-duration: 22s;\n        }\n\n#cookie-button:active\n{\n    transform:scale(0.95);\n}\n\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}