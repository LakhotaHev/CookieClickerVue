{"ast":null,"code":"import $ from \"jquery\";\nimport { createToast } from \"./toastController.js\";\nimport * as cookieHandler from \"./cookieHandler.js\";\nimport * as upgradeHandler from \"./cpsUpgradeHandler.js\";\nexport function clear() {\n  console.log(\"Clearing da cookies\");\n  createToast(\"Cookies Cleared :(\", 2000);\n  var cookies = document.cookie.split;\n}\nexport function save() {\n  console.log(\"cookie stuff is happenin\");\n  createToast(\"Game saved\", 2000);\n  let timeElapsed = 0;\n  let name = $(\"#bakery-name\").text();\n  //save cookies and bakery name\n  document.cookie = `cookies=${cookieHandler.cookies}; SameSite=none; Secure; expires=Fri, 31 Dec 9999 23:59:59`;\n  document.cookie = `bakeryName=${$(\"#bakery-name\").text()}; SameSite=None; Secure; expires=Fri, 31 Dec 9999 23:59:59 GMT`;\n  document.cookie = `cursors=${upgradeHandler.cursors}; SameSite=none; Secure; expires=Fri, 31 Dec 9999 23:59:59`;\n  document.cookie = `grandmas=${upgradeHandler.grandmas}; SameSite=none; Secure; expires=Fri, 31 Dec 9999 23:59:59`;\n}\nexport function load() {\n  cookieHandler.changeAmountOfCookies(Number(getCookie(\"cookies\")));\n  /*below is how we handle the first time loading a page*/\n\n  cookieHandler.changeAmountOfCookies(isNaN(cookieHandler.cookies) ? 0 : cookieHandler.cookies);\n  $(\"#bakery-name\").text(getCookie(\"bakeryName\"));\n  console.log(getCookie(\"bakeryName\"));\n  let cursors = Number(getCookie(\"cursors\"));\n  let grandmas = Number(getCookie(\"grandmas\"));\n  upgradeHandler.load(cursors, grandmas);\n}\nfunction getCookie(name) {\n  return document.cookie.split(\"; \").find(row => row.startsWith(`${name}=`))?.split(\"=\")[1];\n}","map":{"version":3,"names":["$","createToast","cookieHandler","upgradeHandler","clear","console","log","cookies","document","cookie","split","save","timeElapsed","name","text","cursors","grandmas","load","changeAmountOfCookies","Number","getCookie","isNaN","find","row","startsWith"],"sources":["C:/Users/lakho/OneDrive - southhills.edu/Documents/IT211/CookieClickerVue/CookieClickerVue/cookie-clicker_front-end/public/js/index/gameSaveManager.js"],"sourcesContent":["import $ from \"jquery\";\nimport {createToast} from \"./toastController.js\";\nimport * as cookieHandler from \"./cookieHandler.js\"\nimport * as upgradeHandler from \"./cpsUpgradeHandler.js\"\n\nexport function clear()\n{\n    console.log(\"Clearing da cookies\");\n    createToast(\"Cookies Cleared :(\", 2000)\n    \n    var cookies = document.cookie.split\n    \n}\n\nexport function save()\n{\n    console.log(\"cookie stuff is happenin\");\n    createToast(\"Game saved\", 2000);\n    let timeElapsed = 0;\n    let name = $(\"#bakery-name\").text();\n    //save cookies and bakery name\n    document.cookie = `cookies=${cookieHandler.cookies}; SameSite=none; Secure; expires=Fri, 31 Dec 9999 23:59:59`;\n    document.cookie = `bakeryName=${$(\"#bakery-name\").text()}; SameSite=None; Secure; expires=Fri, 31 Dec 9999 23:59:59 GMT`;\n    document.cookie = `cursors=${upgradeHandler.cursors}; SameSite=none; Secure; expires=Fri, 31 Dec 9999 23:59:59`;\n    document.cookie = `grandmas=${upgradeHandler.grandmas}; SameSite=none; Secure; expires=Fri, 31 Dec 9999 23:59:59`;\n}\n\nexport function load()\n{\n    \n    cookieHandler.changeAmountOfCookies(Number(getCookie(\"cookies\")));\n    /*below is how we handle the first time loading a page*/\n\n    cookieHandler.changeAmountOfCookies(isNaN(cookieHandler.cookies) ? 0 : cookieHandler.cookies);\n    $(\"#bakery-name\").text(getCookie(\"bakeryName\"));\n    console.log(getCookie(\"bakeryName\"));\n\n    let cursors = Number(getCookie(\"cursors\"));\n    let grandmas = Number(getCookie(\"grandmas\"));\n    upgradeHandler.load(cursors,grandmas);\n}\n\nfunction getCookie(name)\n{\n   return document.cookie.split(\"; \").find((row) => row.startsWith(`${name}=`))?.split(\"=\")[1];\n}"],"mappings":"AAAA,OAAOA,CAAC,MAAM,QAAQ;AACtB,SAAQC,WAAW,QAAO,sBAAsB;AAChD,OAAO,KAAKC,aAAa,MAAM,oBAAoB;AACnD,OAAO,KAAKC,cAAc,MAAM,wBAAwB;AAExD,OAAO,SAASC,KAAK,GACrB;EACIC,OAAO,CAACC,GAAG,CAAC,qBAAqB,CAAC;EAClCL,WAAW,CAAC,oBAAoB,EAAE,IAAI,CAAC;EAEvC,IAAIM,OAAO,GAAGC,QAAQ,CAACC,MAAM,CAACC,KAAK;AAEvC;AAEA,OAAO,SAASC,IAAI,GACpB;EACIN,OAAO,CAACC,GAAG,CAAC,0BAA0B,CAAC;EACvCL,WAAW,CAAC,YAAY,EAAE,IAAI,CAAC;EAC/B,IAAIW,WAAW,GAAG,CAAC;EACnB,IAAIC,IAAI,GAAGb,CAAC,CAAC,cAAc,CAAC,CAACc,IAAI,EAAE;EACnC;EACAN,QAAQ,CAACC,MAAM,GAAI,WAAUP,aAAa,CAACK,OAAQ,4DAA2D;EAC9GC,QAAQ,CAACC,MAAM,GAAI,cAAaT,CAAC,CAAC,cAAc,CAAC,CAACc,IAAI,EAAG,gEAA+D;EACxHN,QAAQ,CAACC,MAAM,GAAI,WAAUN,cAAc,CAACY,OAAQ,4DAA2D;EAC/GP,QAAQ,CAACC,MAAM,GAAI,YAAWN,cAAc,CAACa,QAAS,4DAA2D;AACrH;AAEA,OAAO,SAASC,IAAI,GACpB;EAEIf,aAAa,CAACgB,qBAAqB,CAACC,MAAM,CAACC,SAAS,CAAC,SAAS,CAAC,CAAC,CAAC;EACjE;;EAEAlB,aAAa,CAACgB,qBAAqB,CAACG,KAAK,CAACnB,aAAa,CAACK,OAAO,CAAC,GAAG,CAAC,GAAGL,aAAa,CAACK,OAAO,CAAC;EAC7FP,CAAC,CAAC,cAAc,CAAC,CAACc,IAAI,CAACM,SAAS,CAAC,YAAY,CAAC,CAAC;EAC/Cf,OAAO,CAACC,GAAG,CAACc,SAAS,CAAC,YAAY,CAAC,CAAC;EAEpC,IAAIL,OAAO,GAAGI,MAAM,CAACC,SAAS,CAAC,SAAS,CAAC,CAAC;EAC1C,IAAIJ,QAAQ,GAAGG,MAAM,CAACC,SAAS,CAAC,UAAU,CAAC,CAAC;EAC5CjB,cAAc,CAACc,IAAI,CAACF,OAAO,EAACC,QAAQ,CAAC;AACzC;AAEA,SAASI,SAAS,CAACP,IAAI,EACvB;EACG,OAAOL,QAAQ,CAACC,MAAM,CAACC,KAAK,CAAC,IAAI,CAAC,CAACY,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACC,UAAU,CAAE,GAAEX,IAAK,GAAE,CAAC,CAAC,EAAEH,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;AAC9F"},"metadata":{},"sourceType":"module","externalDependencies":[]}