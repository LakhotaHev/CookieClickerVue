{"ast":null,"code":"import { roundToNearest } from \"../site.js\";\n//global variables\n\nexport let cookies = 0;\nlet cookiesGainedOnClick = 1;\nexport let cps = 0;\nexport function cookieClicked() {\n  cookies += cookiesGainedOnClick;\n  updateGUI();\n}\nfunction updateGUI() {\n  document.getElementById(\"cookie-counter\").innerHTML = roundToNearest(cookies, 0);\n  document.getElementById(\"cps-counter\").innerHTML = roundToNearest(cps, 1);\n}\nlet cpsWorker = new CpsWorker();\nlet cpsIntervalId = null;\nfunction startCpsInterval() {\n  cpsWorker.postMessage(\"start\");\n  cpsWorker.onmessage = function (e) {\n    let newCps = e.data;\n    cps = newCps;\n  };\n}\nfunction stopCpsInterval() {\n  cpsWorker.postMessage(\"stop\");\n}\nfunction updateCps() {\n  cpsWorker.postMessage(cps);\n}\nexport function loadGame() {\n  // Load the saved game data\n  let savedData = localStorage.getItem(\"gameSave\");\n  if (savedData) {\n    let data = JSON.parse(savedData);\n    cookies = data.cookies;\n    cps = data.cps;\n  }\n  // Start the cps interval\n  startCpsInterval();\n}\nexport function saveGame() {\n  // Save the game data\n  let data = {\n    cookies: cookies,\n    cps: cps\n  };\n  localStorage.setItem(\"gameSave\", JSON.stringify(data));\n}\nexport function resetGame() {\n  // Reset the game data\n  cookies = 0;\n  cps = 0;\n  // Stop the cps interval\n  stopCpsInterval();\n}\nexport function increaseCookieCount(amount) {\n  cookies += amount;\n  updateCps();\n}\nexport function changeAmountOfCookies(amount) {\n  cookies = amount;\n  updateCps();\n}\nexport function changeCps(amount) {\n  cps = amount;\n  updateCps();\n}\nexport function calculateCPS() {\n  cookies += cps / 100;\n  updateGUI();\n}","map":{"version":3,"names":["roundToNearest","cookies","cookiesGainedOnClick","cps","cookieClicked","updateGUI","document","getElementById","innerHTML","cpsWorker","CpsWorker","cpsIntervalId","startCpsInterval","postMessage","onmessage","e","newCps","data","stopCpsInterval","updateCps","loadGame","savedData","localStorage","getItem","JSON","parse","saveGame","setItem","stringify","resetGame","increaseCookieCount","amount","changeAmountOfCookies","changeCps","calculateCPS"],"sources":["C:/Users/lakho/OneDrive - southhills.edu/Documents/IT211/CookieClickerVue/CookieClickerVue/cookie-clicker_front-end/public/js/index/cookieHandler.js"],"sourcesContent":["import { roundToNearest } from \"../site.js\";\n//global variables\n\nexport let cookies = 0;\nlet cookiesGainedOnClick = 1;\nexport let cps = 0;\n\nexport function cookieClicked() {\n    cookies += cookiesGainedOnClick;\n    updateGUI();\n\n}\n\nfunction updateGUI() {\n    document.getElementById(\"cookie-counter\").innerHTML = roundToNearest(cookies, 0);\n    document.getElementById(\"cps-counter\").innerHTML = roundToNearest(cps, 1);\n}\nlet cpsWorker = new CpsWorker();\nlet cpsIntervalId = null;\n\nfunction startCpsInterval() {\n  cpsWorker.postMessage(\"start\");\n  cpsWorker.onmessage = function(e) {\n    let newCps = e.data;\n    cps = newCps;\n  };\n}\n\nfunction stopCpsInterval() {\n  cpsWorker.postMessage(\"stop\");\n}\n\nfunction updateCps() {\n  cpsWorker.postMessage(cps);\n}\n\nexport function loadGame() {\n  // Load the saved game data\n  let savedData = localStorage.getItem(\"gameSave\");\n  if (savedData) {\n    let data = JSON.parse(savedData);\n    cookies = data.cookies;\n    cps = data.cps;\n  }\n  // Start the cps interval\n  startCpsInterval();\n}\n\nexport function saveGame() {\n  // Save the game data\n  let data = {\n    cookies: cookies,\n    cps: cps\n  };\n  localStorage.setItem(\"gameSave\", JSON.stringify(data));\n}\n\nexport function resetGame() {\n  // Reset the game data\n  cookies = 0;\n  cps = 0;\n  // Stop the cps interval\n  stopCpsInterval();\n}\n\nexport function increaseCookieCount(amount) {\n  cookies += amount;\n  updateCps();\n}\n\nexport function changeAmountOfCookies(amount) {\n  cookies = amount;\n  updateCps();\n}\n\nexport function changeCps(amount) {\n  cps = amount;\n  updateCps();\n}\n\nexport function calculateCPS() {\n    cookies += cps / 100;\n    updateGUI();\n}\n\n"],"mappings":"AAAA,SAASA,cAAc,QAAQ,YAAY;AAC3C;;AAEA,OAAO,IAAIC,OAAO,GAAG,CAAC;AACtB,IAAIC,oBAAoB,GAAG,CAAC;AAC5B,OAAO,IAAIC,GAAG,GAAG,CAAC;AAElB,OAAO,SAASC,aAAa,GAAG;EAC5BH,OAAO,IAAIC,oBAAoB;EAC/BG,SAAS,EAAE;AAEf;AAEA,SAASA,SAAS,GAAG;EACjBC,QAAQ,CAACC,cAAc,CAAC,gBAAgB,CAAC,CAACC,SAAS,GAAGR,cAAc,CAACC,OAAO,EAAE,CAAC,CAAC;EAChFK,QAAQ,CAACC,cAAc,CAAC,aAAa,CAAC,CAACC,SAAS,GAAGR,cAAc,CAACG,GAAG,EAAE,CAAC,CAAC;AAC7E;AACA,IAAIM,SAAS,GAAG,IAAIC,SAAS,EAAE;AAC/B,IAAIC,aAAa,GAAG,IAAI;AAExB,SAASC,gBAAgB,GAAG;EAC1BH,SAAS,CAACI,WAAW,CAAC,OAAO,CAAC;EAC9BJ,SAAS,CAACK,SAAS,GAAG,UAASC,CAAC,EAAE;IAChC,IAAIC,MAAM,GAAGD,CAAC,CAACE,IAAI;IACnBd,GAAG,GAAGa,MAAM;EACd,CAAC;AACH;AAEA,SAASE,eAAe,GAAG;EACzBT,SAAS,CAACI,WAAW,CAAC,MAAM,CAAC;AAC/B;AAEA,SAASM,SAAS,GAAG;EACnBV,SAAS,CAACI,WAAW,CAACV,GAAG,CAAC;AAC5B;AAEA,OAAO,SAASiB,QAAQ,GAAG;EACzB;EACA,IAAIC,SAAS,GAAGC,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC;EAChD,IAAIF,SAAS,EAAE;IACb,IAAIJ,IAAI,GAAGO,IAAI,CAACC,KAAK,CAACJ,SAAS,CAAC;IAChCpB,OAAO,GAAGgB,IAAI,CAAChB,OAAO;IACtBE,GAAG,GAAGc,IAAI,CAACd,GAAG;EAChB;EACA;EACAS,gBAAgB,EAAE;AACpB;AAEA,OAAO,SAASc,QAAQ,GAAG;EACzB;EACA,IAAIT,IAAI,GAAG;IACThB,OAAO,EAAEA,OAAO;IAChBE,GAAG,EAAEA;EACP,CAAC;EACDmB,YAAY,CAACK,OAAO,CAAC,UAAU,EAAEH,IAAI,CAACI,SAAS,CAACX,IAAI,CAAC,CAAC;AACxD;AAEA,OAAO,SAASY,SAAS,GAAG;EAC1B;EACA5B,OAAO,GAAG,CAAC;EACXE,GAAG,GAAG,CAAC;EACP;EACAe,eAAe,EAAE;AACnB;AAEA,OAAO,SAASY,mBAAmB,CAACC,MAAM,EAAE;EAC1C9B,OAAO,IAAI8B,MAAM;EACjBZ,SAAS,EAAE;AACb;AAEA,OAAO,SAASa,qBAAqB,CAACD,MAAM,EAAE;EAC5C9B,OAAO,GAAG8B,MAAM;EAChBZ,SAAS,EAAE;AACb;AAEA,OAAO,SAASc,SAAS,CAACF,MAAM,EAAE;EAChC5B,GAAG,GAAG4B,MAAM;EACZZ,SAAS,EAAE;AACb;AAEA,OAAO,SAASe,YAAY,GAAG;EAC3BjC,OAAO,IAAIE,GAAG,GAAG,GAAG;EACpBE,SAAS,EAAE;AACf"},"metadata":{},"sourceType":"module","externalDependencies":[]}